{"version":3,"sources":["js/date.js","js/Header.js","js/WeekMood.js","js/Weather.js","Mood.js","Sign-Up.js","Login.js","AddMood.js","App.js","index.js"],"names":["Today","today","Date","time","hours","getHours","minutes","getMinutes","week","yersterday","twoDaysAgo","threeDaysAgo","i","day","setDate","getDate","month","toString","split","Header","props","location","react_default","a","createElement","id","username","react_router_dom","to","src","alt","onClick","fetch","method","headers","Content-Type","then","response","json","data","console","log","window","todayInfo","formateMonth","WeekMood","mood","_useState","useState","0","date","1","2","_useState2","Object","slicedToArray","weekMood","setWeekMood","useEffect","credentials","_loop","_loop2","index","frontDate","toLocaleDateString","mood_date","prevState","objectSpread","defineProperty","mood_descr","length","keys","formatDates","rowDate","getMonth","className","Weather","latitude","longitude","setLocation","_useState3","_useState4","setTime","_useState5","temperature","description","_useState6","weather","setWeather","userPosition","position","coords","lat","lot","setInterval","navigator","geolocation","getCurrentPosition","lon","API_KEY","process","API_link","concat","city","name","temp","main","toFixed","descr","getWeather","Mood","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","symptoms","userId","_this2","databaseDate","sessionDate","setState","js_Header","js_Weather","js_WeekMood","href","React","Component","SignUp","password","userData","setUserdata","changeInput","event","_event$target","target","value","btoa","notification","setNotificetion","sendData","body","JSON","stringify","message","action","onSubmit","e","preventDefault","htmlFor","type","onChange","placeholder","required","Login","loginError","setError","credential","alert","reload","autoComplete","AddMood","setMood","setSymptoms","confirmation","setConfirmation","handleMood","currentTarget","MoodContainer","scrollTo","setTimeout","App","loginStatus","loginData","setLoginData","loggedIn","user","react_router","path","element","src_Mood","replace","src_AddMood","src_Login","Sign_Up","root","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.1cc03e84.chunk.js","sourcesContent":["//Set up current date\r\n\r\n let Today = function setDate(){\r\n    // full date of today\r\n    let today = new Date();\r\n    // what day of week is it\r\n    let todayMonth = function(month){\r\n        switch(month){\r\n            case 1: {\r\n                month = \"January\";\r\n                break;\r\n            }\r\n            case 2:{ \r\n                month = \"February\";\r\n                break;\r\n            }   \r\n            case 3:{\r\n                month = \"March\";\r\n                break;\r\n            } \r\n            case 4: {\r\n                month = \"April\";\r\n                break;\r\n            }\r\n            case 5: {\r\n                month = \"May\";\r\n                break;\r\n            }\r\n            case 6:{ \r\n                month = \"June\";\r\n                break;\r\n            }\r\n            case 7:{ \r\n                month = \"July\";\r\n                break;\r\n            }\r\n            case 8: {\r\n                month = \"August\";\r\n                break;\r\n            }\r\n            case 9:{ \r\n                month = \"September\";\r\n                break;\r\n            }\r\n            case 10: {\r\n                month = \"October\";\r\n                break;\r\n            }\r\n            case 11:{ \r\n                month = \"November\";\r\n                break;\r\n            }\r\n            case 12: {\r\n                month = \"Decemeber\";\r\n                break;\r\n            }\r\n\r\n            default: {\r\n                month = \"Undefined\";\r\n            }\r\n        }\r\n        return month;\r\n    } //what month is it\r\n\r\n    let time = {\r\n        hours: today.getHours(),\r\n        minutes: today.getMinutes()\r\n    }\r\n    \r\n    //Get previous 4 days before today's date\r\n    let week = {\r\n        yersterday: new Date(today),\r\n        twoDaysAgo: new Date(today),\r\n        threeDaysAgo: new Date(today),\r\n    }\r\n\r\n    //for loop for week dates\r\n    let i = 1;\r\n    for (const day in week){\r\n        week[day].setDate(week[day].getDate() - i);\r\n        i++;\r\n    }\r\n\r\n    return [today, time, week, todayMonth];\r\n}\r\n\r\n\r\nexport  default Today\r\n\r\n","\r\nimport React from \"react\";\r\nimport Today from './date';\r\nimport { Link }  from \"react-router-dom\";\r\n\r\nlet todayInfo = Today();\r\nlet today = todayInfo[0].toString().split(' ');\r\n\r\n\r\nfunction Header(props){\r\n\r\nlet location  = props.location;\r\n\r\nfunction Logout(){\r\n        fetch('/logoutUser', {\r\n                method: \"GET\",\r\n                headers:{\r\n                        'Content-Type':'application/json'\r\n                },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n                console.log(data);\r\n                window.location = '/';\r\n        })\r\n       \r\n}\r\n\r\n        return (\r\n        <header>\r\n                <section id='header-container'>\r\n                        {location === '/'?\r\n                        <div>\r\n                                <h4>{today[0] + \", \" + today[1] + \" \" + today[3]}</h4>\r\n                                <h3>Hello {props.username}</h3>\r\n                        </div>  \r\n                        : <div id = 'goBackHeader'>\r\n                        <Link to = '/'><img src=\"/media/goBack.svg\" alt=\"goBack\"></img></Link>\r\n                        <Link to = '/'><span>Go back</span></Link>\r\n                        </div>\r\n                        }\r\n                        <a onClick = {Logout} id={location === 'test'? 'headerLogoutMain' : 'headerLogoutSecondary'}>Log out</a>\r\n                </section>\r\n        </header>)\r\n}\r\n\r\nexport default Header;","import '../App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Today from './date';\r\n\r\n\r\nlet todayInfo = Today();\r\nlet formateMonth = todayInfo[3];\r\n\r\nlet  WeekMood = (props) =>{\r\n\r\n    let mood = props.mood;\r\n\r\n    let [ weekMood, setWeekMood ] = useState(\r\n        {\r\n            0: {\r\n                date:todayInfo[2].threeDaysAgo,\r\n                mood:''\r\n            },\r\n            1: {\r\n                date:todayInfo[2].twoDaysAgo,\r\n                mood:''\r\n            },\r\n            2: {\r\n                date:todayInfo[2].yersterday,\r\n                mood:''\r\n            }\r\n        }\r\n    )\r\n    //Display week's moods\r\n\r\n    useEffect(() => {\r\n        fetch(\"/usersFeeling\", {\r\n            method:\"GET\",\r\n            headers:{'Content-Type':'application/json'},\r\n            credentials:'include'\r\n        })\r\n        .then (response => response.json())\r\n        .then(data => {\r\n\r\n            for(let i = 0; i < Object.keys(weekMood).length; i++){\r\n                //Check each week day for concurrence\r\n                for(let index = 0; index < data.length; index++){\r\n                    let frontDate = weekMood[i].date.toLocaleDateString('en-CA').split('T');\r\n                    let dateToCompare = data[index].mood_date.split('T');\r\n                    if(dateToCompare[0] === frontDate[0]){\r\n                        setWeekMood(\r\n                            (prevState) => ({...prevState, \r\n                                [i]:{ \r\n                                    ...prevState[i],\r\n                                    mood:data[index].mood_descr}\r\n                               \r\n                            } )\r\n                            \r\n                        )\r\n                \r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        })\r\n        \r\n\r\n    },[])\r\n\r\n   let formatDates = (rowDate) => {\r\n        rowDate = formateMonth(rowDate.getMonth() + 1) +  ' ' + rowDate.getDate();\r\n        return rowDate;\r\n    }\r\n\r\n    let noData = \"No entry\";\r\n\r\n    return(\r\n        <section id='mood-days'>\r\n\r\n                <div className='days-div'>\r\n                    {formatDates(weekMood[0].date)}<br/>\r\n                    <p>{weekMood[0].mood? weekMood[0].mood : noData}</p>\r\n                </div>\r\n\r\n                <div className='days-div'>\r\n                {formatDates(weekMood[1].date)}<br/>\r\n                <p>{weekMood[1].mood? weekMood[1].mood : noData}</p>\r\n\r\n                </div>\r\n                <div className='days-div'>\r\n                    {formatDates(weekMood[2].date)}<br/>\r\n                    <p>{weekMood[2].mood? weekMood[2].mood : noData}</p>\r\n                </div>\r\n\r\n                <div className='days-div'>Today<br/>\r\n                <p>{mood? mood: 'No entry'}</p>\r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default WeekMood;","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction Weather(){\r\n\r\n    // Set location\r\n    let [location, setLocation] = useState({\r\n        latitude: '',\r\n        longitude:''\r\n    })\r\n\r\n    let [time, setTime] = useState(new Date());\r\n\r\n    // Set weather description to fill in after weather API call\r\n    let [weather, setWeather] = useState({\r\n        location: 'Not selected',\r\n        temperature: '20',\r\n        description: 'none'\r\n    })\r\n\r\n\r\n    //Time and geolocation\r\n    useEffect(() => {\r\n        setInterval(() => {setTime(new Date())}, 10000);\r\n        //Get user position\r\n        navigator.geolocation.getCurrentPosition(userPosition); // should run once        \r\n    },[])\r\n\r\n\r\n    //Set up weather\r\n    useEffect(()=> {\r\n      \r\n        if(location.latitude !== ''){\r\n            getWeather(location.latitude, location.longitude);\r\n        }\r\n\r\n    },[location])\r\n    \r\n\r\n\r\n    function userPosition(data){\r\n        let position = data.coords;\r\n        let lat = position.latitude;\r\n        let lot = position.longitude;\r\n            setLocation(prevState => ({\r\n                    latitude:lat,\r\n                    longitude:lot\r\n            }))\r\n    }\r\n\r\n    function getWeather(lat,lon){\r\n        const API_KEY = process.env.REACT_APP_API_KEY;\r\n        console.log(API_KEY);\r\n        console.log(API_KEY)\r\n        const API_link = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\r\n        console.log(API_link);\r\n         //Make a call\r\n        fetch(API_link)\r\n        .then(function(response){\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        let city = data.name;\r\n        let temp = (data.main.temp - 273.15).toFixed(0);\r\n        let descr = (data.weather[0].description)\r\n        setWeather(prevState => ({\r\n            location: city,\r\n            temperature: temp,\r\n            description: descr\r\n        }))\r\n    })\r\n    }\r\n\r\n    return(   \r\n        <div className=\"weather_container\">\r\n        <p id=\"Location\">{weather.location}</p> \r\n        <p id=\"temperature\">{weather.temperature}°</p>\r\n        <p id=\"time\">{time.getHours() + \":\" + time.getMinutes()}</p>\r\n        <p id=\"weather-decrs\">{weather.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n","//set up class\r\nimport React from 'react';\r\nimport Header from './js/Header';\r\nimport WeekMood from './js/WeekMood';\r\nimport Weather from './js/Weather';\r\nimport { Link }  from \"react-router-dom\";\r\n\r\n//import Weather from './js/Weather';\r\n\r\n\r\nclass Mood extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props);\r\n        //Setting up state\r\n        this.state = {\r\n            mood:'',\r\n            symptoms:'',\r\n            date:new Date(),\r\n            username: props.username,\r\n            userId: props.userId\r\n        };\r\n        \r\n    }\r\n    \r\n    \r\n    componentDidMount(){// send to weekMoods\r\n   \r\n        fetch(\"/usersFeeling\", {\r\n            method:\"GET\",\r\n            headers:{'Content-Type':'application/json'},\r\n            credentials:'include'\r\n        })\r\n        .then (response => response.json())\r\n        .then(data => {\r\n                //Compare today's date and DB dates\r\n            let databaseDate = data[data.length - 1].mood_date.split('T');\r\n            let sessionDate = this.state.date.toLocaleDateString('en-CA').split('T');\r\n            if(databaseDate[0] === sessionDate[0]){\r\n                this.setState({\r\n                    mood: data[data.length - 1].mood_descr,\r\n                    symptoms:data[data.length - 1].symptoms\r\n                })\r\n            }\r\n              \r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div id='moodContainer'>\r\n                    <div id = 'Grid-holder-mood'>\r\n                        <Header username = {this.state.username} location = '/' />\r\n\r\n                        <section id = 'weatherSection'>\r\n                            <h3>Today’s weather</h3>\r\n                            <Weather />\r\n                        </section>\r\n\r\n                        <section id = \"checkinSection\">\r\n                            <h3>These are your last check-ins</h3>\r\n                            <WeekMood mood = {this.state.mood}/>\r\n                        </section>\r\n\r\n                        <section id='moodEdit' className = {this.state.mood? 'MoodEditOn' : 'MoodEditOff'}>\r\n                        {this.state.mood? \r\n                            <div id='current-mood-container'>\r\n                                <h3>Today I feel: </h3>\r\n                                <div>\r\n                                    <h2>{this.state.mood}</h2>\r\n                                    <p>Notes: {this.state.symptoms}</p>\r\n                                    <img src = {'/media/' + this.state.mood +'.svg'} alt = {this.state.mood + 'mood'}></img>\r\n                                </div>\r\n                              \r\n                            </div> \r\n                            :  <h2>No entries for today</h2>}\r\n                        </section>\r\n\r\n                        <section id={this.state.mood? 'MoodOn' : 'ChangeMoodSection'}>\r\n                            <div>\r\n                                <Link to =\"/addMood\">+</Link>\r\n                                <h4>{this.state.mood? 'Edit Mood' : 'Add mood'}</h4>\r\n                            </div>\r\n                        </section>\r\n\r\n                        </div>\r\n                <a href='https://www.freepik.com/vectors/like-emoji' className = \"pic-contribution\">Like emoji vector created by rawpixel.com - www.freepik.com</a>        \r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Mood;","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport { Link  } from \"react-router-dom\";\r\n\r\n\r\nfunction SignUp (){\r\n\r\n    const [userData, setUserdata] = useState({\r\n        username:'',\r\n        password:''\r\n    });\r\n\r\n\r\n\r\n    const changeInput = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserdata(\r\n            (prevState) => ({...prevState, [name]: value}),\r\n            userData.password = btoa(userData.password)\r\n            )\r\n    }\r\n\r\n    const {username, password} = userData;\r\n    const [notification, setNotificetion] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log();\r\n        if (username != null && password != null)\r\n        {\r\n            sendData();\r\n        }\r\n    }\r\n\r\n    const sendData = () => {\r\n\r\n        fetch('/signUpUser', {\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body: JSON.stringify(userData)\r\n        })\r\n\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data.message === \"Registration is successful\"){\r\n            setNotificetion(true)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const hideNotification = () =>{\r\n        setNotificetion(false)\r\n        setUserdata({\r\n            username:'',\r\n            password:''\r\n        });\r\n        window.location.href = '/login';\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"sign-up-container\">\r\n        <div className = {notification? \"notification\" : \"notificationHidden\"}><p>Thank you for registration, {username}</p><a onClick={hideNotification}>Close</a></div>\r\n            \r\n            <div className = 'loginScreenHeader'> \r\n                <h1>Moodnex</h1>\r\n                <h5>Your personal mood app</h5>\r\n                <h3>Sign Up</h3> \r\n            </div>\r\n            <form method=\"POST\" action=\"/\" onSubmit={handleSubmit}> \r\n                    <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" id=\"username\" name=\"username\"  value = {username} onChange = {changeInput} placeholder='Username..' required />\r\n                <label htmlFor=\"passwordR\">Password</label>\r\n                <input type=\"password\" id=\"passwordR\" name=\"password\" value = {password}  onChange = {changeInput} placeholder= 'Enter Your Password' required />\r\n                <input type=\"submit\" id=\"subBtn\" value=\"Sign Up\"/>\r\n                <p>Already have an account? <Link to=\"/login\">Log In!</Link></p>\r\n\r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SignUp;\r\n","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login(){\r\n\r\n    const [userData, setUserdata] = useState({\r\n        username:'',\r\n        password:''\r\n    });\r\n\r\n    const [loginError, setError] = useState('');\r\n\r\n    const changeInput = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserdata(\r\n            (prevState) => (\r\n                {...prevState, [name]: value}\r\n            ))\r\n    }\r\n\r\n    const {username, password} = userData;\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log();\r\n        if (username != null && password != null)\r\n        {\r\n            sendData();\r\n        }\r\n    }\r\n\r\n    const sendData = () => {\r\n\r\n        fetch('/loginUser', {\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            credential:true,\r\n            body: JSON.stringify(userData)\r\n        })\r\n\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            if(data.message){\r\n                if(data.message === \"Wrong password\"){\r\n                    setError(\"Wrong password!\");\r\n                }\r\n                else if (data.message === \"No user found\"){\r\n                    setError(\"Wrong username!\");\r\n                }\r\n                else{\r\n                    alert( 'Wrong credentials. Try again');\r\n                }\r\n\r\n            }\r\n            else{\r\n                window.location.reload();\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"sign-up-container\">\r\n        <div className = 'loginScreenHeader'> \r\n            <h1>Moodnex</h1>\r\n            <h5>Your personal mood app</h5>\r\n            <h3>Login</h3>\r\n        </div>\r\n       <form method=\"POST\" action=\"/\" onSubmit={handleSubmit}>\r\n       <p className={ loginError? \"loginError-active\" : \"loginError-none\"}>{loginError}</p> \r\n            <label htmlFor=\"username\">Username</label>\r\n           <input type=\"text\" id=\"username\" name=\"username\"  autoComplete='on' value = {username} onChange = {changeInput} placeholder='Type here..' required />\r\n           <label htmlFor=\"password\">Password</label>\r\n           <input type=\"password\" id=\"password\" name=\"password\" autoComplete='on' value = {password} onChange = {changeInput} placeholder='Type here..' required />\r\n           <input type=\"submit\" id=\"subBtn\" value=\"Login\"/>\r\n           <p>Don't have an account? <Link to=\"/signup\">Sign Up!</Link></p>\r\n       </form>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport Header from './js/Header';\r\n\r\n\r\nlet AddMood = (props) =>{\r\n\r\n\r\nlet [ mood, setMood ] = useState('');\r\nlet [ symptoms, setSymptoms ] = useState('');\r\nlet [ confirmation, setConfirmation] = useState(false);\r\n\r\nlet userData = {\r\n    userId:props.userId,\r\n    mood: mood,\r\n    symptoms: symptoms\r\n}\r\n\r\nfunction handleMood(e){\r\n    setMood(mood = e.currentTarget.id);\r\n}\r\nfunction sendData(){\r\n  \r\n   fetch('/addTodaysMood', {\r\n        method:'POST',\r\n        headers:{'Content-Type':'application/json'},\r\n        body: JSON.stringify(userData)\r\n    })\r\n   .then(response => {\r\n       console.log(response);\r\n    })\r\n        window.scrollTo(0,0); \r\n        setConfirmation(true);\r\n        setTimeout(() => { setConfirmation(confirmation = false)}, 3000);\r\n       \r\n}\r\n\r\nlet MoodContainer = {\r\n    0: 'Happy',\r\n    1: 'Joyful',\r\n    2: 'Peaceful',\r\n    3: 'Loving',\r\n    4: 'Stressed',\r\n    5: 'Sad',\r\n    6: 'Angry',\r\n    7: 'Frustrated',\r\n    8: 'Grumpy'\r\n}\r\n\r\n\r\n    return(\r\n        \r\n      <div id='addModd-container'>\r\n        <div id = 'addModd-mood-inner-container'>\r\n            <Header location = 'addMood' />\r\n            <section id=\"confirmation\">\r\n                {confirmation? <div id=\"Mood-update-note\"><h4>A new entry was added</h4></div> : <div></div>}\r\n            </section>\r\n            <section id='moodHolder'>\r\n                <h3>Today I feel: </h3>\r\n                <div onClick = {handleMood} id = {MoodContainer[0]} >\r\n                    <img src = 'media/happy.svg' alt ='happy' className = {mood === MoodContainer[0]? 'mood-selected' :'mood-img'}/>\r\n                    <h4>{MoodContainer[0]}</h4>\r\n                </div>\r\n                <div onClick = {handleMood} id = {MoodContainer[1]} >\r\n                    <img src = 'media/joyful.svg' alt ='Joyful'  className = {mood === MoodContainer[1]? 'mood-selected' :'mood-img'}/>\r\n                    <h4>{MoodContainer[1]}</h4>\r\n                </div>\r\n                <div  onClick = {handleMood} id = {MoodContainer[2]} >\r\n                    <img src = 'media/Peaceful.svg' alt ='Peaceful'  className = {mood === MoodContainer[2]? 'mood-selected' :'mood-img'}/>\r\n                    <h4>{MoodContainer[2]}</h4>\r\n                </div>\r\n                <div onClick = {handleMood} id = {MoodContainer[3]}>\r\n                    <img src = 'media/loving.svg' alt ='Loving'  className = {mood === MoodContainer[3]? 'mood-selected' :'mood-img'}/>\r\n                    <h4>{MoodContainer[3]}</h4>\r\n                </div>\r\n                <div onClick = {handleMood} id = {MoodContainer[4]}>\r\n                    <img src = 'media/stressed.svg' alt ='stressed' className = {mood === MoodContainer[4]? 'mood-selected' :'mood-img'} />\r\n                    <h4>{MoodContainer[4]}</h4>\r\n                </div>\r\n                <div onClick = {handleMood} id = {MoodContainer[5]}>\r\n                    <img src = 'media/upset.svg' alt ='upset' className = {mood === MoodContainer[5]? 'mood-selected' :'mood-img'} />\r\n                    <h4>{MoodContainer[5]}</h4>\r\n                </div>\r\n                <div  onClick = {handleMood} id = {MoodContainer[6]}>\r\n                    <img src = 'media/angry.svg' alt ='angry'  className = {mood === MoodContainer[6]? 'mood-selected' :'mood-img'}/>\r\n                    <h4>{MoodContainer[6]}</h4>\r\n                </div>\r\n                <div onClick = {handleMood} id = {MoodContainer[7]}>\r\n                    <img src = 'media/frustrated.svg' alt ='frustrated'  className = {mood === MoodContainer[7]? 'mood-selected' :'mood-img'}/>\r\n                    <h4>{MoodContainer[7]}</h4>\r\n                </div>\r\n                <div onClick = {handleMood} id = {MoodContainer[8]}>\r\n                    <img src = 'media/grumpy.svg' alt ='grumpy'  className = {mood === MoodContainer[8]? 'mood-selected' :'mood-img'} />\r\n                    <h4>{MoodContainer[8]}</h4>\r\n                </div>\r\n\r\n            </section>\r\n            <section id = \"symptoms\">\r\n                <h3>Is there anything else you want to mention?</h3>\r\n                <textarea placeholder='Type here..' onChange = { (e) => {setSymptoms(symptoms = e.target.value)}}></textarea>\r\n            </section>\r\n            <button onClick = {sendData}>Confirm</button>\r\n        </div>\r\n        <a href='https://www.freepik.com/vectors/like-emoji' className = \"pic-contribution\">Like emoji vector created by rawpixel.com - www.freepik.com</a>        \r\n    </div>\r\n      \r\n\r\n    )\r\n}\r\n\r\nexport default AddMood;","import './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Mood from './Mood';\r\nimport {\r\n  BrowserRouter, Routes, Route, Navigate  \r\n} from \"react-router-dom\";\r\nimport SignUp from './Sign-Up';\r\nimport Login from './Login';\r\nimport AddMood from './AddMood'\r\n\r\n\r\nfunction App () {\r\n\r\nconst [loginData, setLoginData] = useState({\r\n    loginStatus: false,\r\n    username:'',\r\n    userId: 0\r\n})\r\n    \r\n  useEffect(()=>{\r\n    fetch(\"/loginUser\", {\r\n      method:\"GET\",\r\n      headers:{'Content-Type':'application/json'},\r\n      credentials:'include'\r\n    })\r\n    .then (response => response.json())\r\n    .then(data => {\r\n        if(data.loggedIn){\r\n          \r\n          setLoginData(\r\n            {loginStatus: data.loggedIn,\r\n              username: data.user,\r\n              userId: data.userId\r\n          }) \r\n        }\r\n    })\r\n},[])\r\n\r\n\r\n  //Setting up Routes\r\n\r\n  return(\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n        <Route path = \"/\" element = {loginData.loginStatus ? <Mood username = {loginData.username} userId = {loginData.userId}/>  : <Navigate to = \"/login\" replace />  } />\r\n        <Route path = \"/addMood\" element= {loginData.loginStatus ? <AddMood userId = {loginData.userId}/> : <Navigate to = \"/login\" replace />} />\r\n          <Route path = \"/login\" element= {!(loginData.loginStatus) ? <Login/> : <Navigate to = \"/\" replace  />}  />\r\n          <Route path = \"/signup\" element= {<SignUp />} />\r\n\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n\r\n\r\n  )\r\n     \r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nlet root = document.getElementById('root');\r\n\r\nReactDOM.render( <App />, root);"],"sourceRoot":""}